type.auth.authenticator: Authenticator Configuration
type.auth.collection: Authenticator Configuration
type.auth.pwPolicy: Password Policy Configuration
type.auth.rateLimit: Login Rate Limiter Configuration

type.auth.authenticator.ldap: LDAP Authenticator
type.auth.authenticator.ldap.schema: LDAP Authentication Schema
type.auth.authenticator.krb5: Kerberos Authenticator
type.auth.authenticator.ad: Active Directory Authenticator
type.auth.authenticator.ldap.sync: Directory Synchronization Options

type.auth.roles: Role Definitions
type.auth.roles.role: Role Definition


auth.collection.enableLocalAuth: Enable local database
auth.collection.enableLocalAuth.description: Enables the builtin user management

auth.collection.allowInsecureAuth: Allow insecure authentication
auth.collection.allowInsecureAuth.description: If enabled, authentication will be possible over potentially insecure transports.

auth.collection.authenticators: Authenticators

auth.collections.duplicateRealm: Realm names must be unique, found duplicate {0}

auth.rateLimit.disableLaxSourceCheck: Relaxed source checking
auth.rateLimit.disableLaxSourceCheck.description: If a source has an succesful login attempt do not lockout the source.
auth.rateLimit.disableGlobalDelay: Disable global delays
auth.rateLimit.disableGlobalDelay.description: Disable the additive global delay (only added if another lockout rule matches)
auth.rateLimit.disableUserLockout: Disable user lockout
auth.rateLimit.disableUserLockout.description: Disable per user lockout rules.
auth.rateLimit.cleanInterval: Reset interval
auth.rateLimit.cleanInterval.description: Interval after which counters are reset.


auth.pwPolicy.entropyLowerLimit: Minimum entropy
auth.pwPolicy.entropyLowerLimit.description: Lower acceptable entropy limit as determined by our entropy estimator. 
auth.pwPolicy.enableAgeCheck: Check password age
auth.pwPolicy.maximumPasswordAge: Maximum password age
auth.pwPolicy.ignoreUnknownAge: Ignore unknown age


authenticator.label.noRealm: unnamed


LDAPServerType.PLAIN: Plain LDAP
LDAPServerType.AD: Active directory

LDAPAuthType.ANONYMOUS: Anonymous bind
LDAPAuthType.SIMPLE: Simple bind
LDAPAuthType.SASL: SASL bind

auth.authenticator.ldap.realm: Authenticator name
auth.authenticator.ldap.enforcePasswordPolicy: Enforce password policy on login
auth.authenticator.ldap.enforcePasswordPolicyOnChange: Enforce password policy on change

auth.authenticator.ldap.addGroupNameAsRole: Add group name as role
auth.authenticator.ldap.alwaysAddRoles: Always add role
auth.authenticator.ldap.staticRoleMappings: DN role mappings
auth.authenticator.ldap.patternRoleMappings: DN pattern role mappings

auth.authenticator.ldap.schema.recursiveResolveGroups: Support nested groups
auth.authenticator.ldap.schema.referencesAreDNs: Reference attributes are DNs
auth.authenticator.ldap.schema.referencesAreDNs.description: User/group references are specified via their full DN.
auth.authenticator.ldap.schema.useForwardGroups: Forward-style groups
auth.authenticator.ldap.schema.useForwardGroups.description:  Schema uses forward style references (memberships are stored at the member)
auth.authenticator.ldap.enableSynchronization: Enable synchronization
auth.authenticator.ldap.enableSynchronization.description: Synchronization allows users to be found before their first login.

auth.authenticator.ldap.schema.userSchema: User schema
auth.authenticator.ldap.schema.groupSchema: Group schema

auth.authenticator.ldap.requireTransportSecurity: No transport security configured, authenticator will send user password in clear text.


auth.authenticator.krb5.realm: Authenticator name
auth.authenticator.krb5.kerberosRealm: Kerberos Realm
auth.authenticator.krb5.keytabAlias: Keytab
auth.authenticator.krb5.serviceName: Service name
auth.authenticator.krb5.allowPasswordFallback: Allow password fallback
auth.authenticator.krb5.acceptPrincipalPatterns: Accept principals
auth.authenticator.krb5.rejectPrincipalPatterns: Reject principals
auth.authenticator.krb5.alwaysAddRoles: Always add role
auth.authenticator.krb5.principalAddRoles = Principal pattern role mappings

auth.authenticator.ad.realm: Authenticator name
auth.authenticator.ad.domain: AD Domain
auth.authenticator.ad.serviceName: Service name
auth.authenticator.ad.allowPasswordFallback: Allow password fallback
auth.authenticator.ad.sendNTLMChallenge: Send NTLM Challenge
auth.authenticator.ad.acceptNTLMFallback: Accept NTLM Fallback
auth.authenticator.ad.disablePACValidation: Disable PAC validation
auth.authenticator.ad.disablePACs: Disable PAC usage
auth.authenticator.ad.rejectNonADPrincipals: Reject non AD Users
auth.authenticator.ad.rejectNonADPrincipals.description: This rejects all non-ad principals, e.g. ones from cross-realm trusts with non AD realms.
auth.authenticator.ad.acceptOnlyLocal: Accept only Local Domain users
auth.authenticator.ad.acceptOnlyLocal.description: Do not allow trusted domain users to login.
auth.authenticator.ad.requireDomainUserGroup: Require Domain Users group
auth.authenticator.ad.requireDomainUserGroup.description: Only allows users that are member of the domain users builtin group to login.  
auth.authenticator.ad.acceptDomainSids: Accept Domains
auth.authenticator.ad.rejectDomainSids: Reject Domains
auth.authenticator.ad.requiredSids: Require Membership
auth.authenticator.ad.rejectSids: Reject Members
auth.authenticator.ad.sidRoles: User/Group role mappings
auth.authenticator.ad.foreignKerberos: Foreign Kerberos Realm Settings
auth.authenticator.ad.acceptPrincipalPatterns: Accept principals
auth.authenticator.ad.rejectPrincipalPatterns: Reject principals
auth.authenticator.ad.alwaysAddRoles: Always add role
auth.authenticator.ad.principalAddRoles: Principal pattern role mappings
auth.authenticator.ad.enableSynchronization: Enable synchronization
auth.authenticator.ad.enableSynchronization.description: Synchronization allows users to be found before their first login.
auth.authenticator.ad.userSyncBase=User base DN
auth.authenticator.ad.userSyncFilter=User filter 
auth.authenticator.ad.groupSyncBase=Group sync base DN
auth.authenticator.ad.groupSyncFilter=Group filter

auth.roles.role.roleId: Role
auth.roles.role.permissions: Permissions
auth.roles.role.hidden: Hidden
auth.roles.role.titles: Title
auth.roles.role.descriptions: Description

auth.authenticator.ldap.sync.synchronizeRemovals: Synchronize removals
auth.authenticator.ldap.sync.synchronizeRemovals.description: Remove users and their data when they are removed from the source. Use with caution.
auth.authenticator.ldap.sync.pageSize: Search page size
auth.authenticator.ldap.sync.removeUsingUUID: Remove using UUID
auth.authenticator.ldap.sync.syncInterval: Sync interval
auth.authenticator.ldap.sync.syncInterval.description: Interval between synchronization runs. \
 Lowering that will pick up changes faster but also means putting more load on the involved systems.

test.username.label: Username
test.username.description:
test.password.label: Password
test.password.description:

test.authenticator.ldap.title: Test LDAP authentication
test.authenticator.ldap.label: Test Authentication

test.LDAP_USER_LOOKUP: Looking up users
test.LDAP_FOUND_USERS: Found {0} users, sample: {1}
test.LDAP_NO_USER_ENTRIES: Did not find any users using these settings
test.FAIL_LDAP_INVALID_USER_BASE: Invalid user base DN: {0}
test.FAIL_LDAP_USER_LOOKUP: Error lookup up users: {0}
test.LDAP_GROUP_LOOKUP: Looking up groups
test.LDAP_FOUND_GROUPS: Found {0} groups, sample: {1}
test.LDAP_NO_GROUP_ENTRIES: Did not find any groups using these settings
test.FAIL_LDAP_INVALID_GROUP_BASE: Invalid group base DN: {0}
test.FAIL_LDAP_GROUP_LOOKUP: Error lookup up groups: {0} 

test.LDAP_BIND_BINDING: Trying to bind as {0}
test.LDAP_BIND_SUCESSS: Sucessfully bound as {0}
test.LDAP_BIND_FAILURE: Failed to bind as {0}: {1}


test.LDAP_GROUP_MAPPED: Group maps to {1} (display: {2})
test.LDAP_GROUP_MAPPING_FAIL: Failed to map group attributes: {0} 
test.LDAP_GROUP_MEMBERS: Found {0} group member(s)
test.LDAP_GROUP_NO_MEMBERS: No group members found.

test.LDAP_USER_MAPPED: User maps to {1} (display: {2}, mail: {3})
test.LDAP_USER_MAPPING_FAIL: Failed to map group attributes: {0} 
test.LDAP_USER_MEMBERSHIP: Found {0} group membership(s)

test.LDAP_USER_NO_MEMBERSHIP: No group memberships found.


test.LDAP_REFERENCE_DN: Contains DNs, must contain names: {0}.
test.LDAP_REFERENCE_NODN: Looks like this contains named references, must contain DNs: {0}.

test.LDAP_OPERATIONAL_NOUUID: Missing entry UUID attribute {0}.
test.LDAP_OPERATIONAL_UUID_INVALID: Server return invalid entry UUIDs: {0}
test.LDAP_OPERATIONAL_NOMODIFY: Missing entry last modified time attribute {0}.

test.LDAP_FAIL: Unknown error: {0}

test.LDAP_FILTER_INVALID: Invalid LDAP filter: {0}

test.LDAP_BIND_NO_USER: No username/password supplied, cannot run bind test.
test.LDAP_BIND_LOOKUP_NORES: No result for user query {0}
test.LDAP_BIND_LOOKUP_DN: Found user {0} at {1}
test.LDAP_BIND_LOOKUP_MULTIRES: Multiple results for user query {0}


test.authenticator.ad.title: Test AD authentication
test.authenticator.ad.label: Test Authentication


test.AD_REALM_UNCONFIGURED: Domain ''{0}'' is not configured on this host, cannot run test.
test.AD_REALM_UNJOINED: Domain ''{0}'' has not been joined yet, cannot run test.
test.AD_REALM_JOINED_UNCHECKED: Is a domain ''{0}'' member, hostname ''{1}'', machine account: ''{2}'', sid: ''{3}''.
test.AD_REALM_CHECK: Checking domain membership status...
test.AD_REALM_CHECK_OK: Host seems to be properly joined to domain.
test.AD_REALM_CHECK_FAIL: Error checking membership status in ''{0}'': {1} 

test.FAIL_AD_UNKNOWN: Unknown error: {0}
test.AD_REALM_DCLOOKUP_OK: Successful lookup of domain controllers for ''{0}'': {1}
test.AD_REALM_DCLOOKUP_FAIL: Failed to lookup domain controllers for ''{0}'':  {1}
test.AD_REALM_NETLOGON_OK: Successfully established netlogon connection.
test.AD_REALM_NETLOGON_FAIL: Failed to establish netlogon connection: {0}
test.AD_REALM_LDAP_OK: Successfully connected to DC LDAP.
test.AD_REALM_LDAP_FAIL: Could not connect to DC LDAP: {0}
test.AD_REALM_LDAP_USER_NOTFOUND: User ''{0}'' not found in LDAP.
test.AD_REALM_LDAP_USER_MULTIPLE: Multiple users found for search criteria.
test.AD_REALM_LDAP_USER_FOUND: User ''{0}'' found at {1}.

test.AD_REALM_LDAP_SYNC_USERS: Found {0} users for synchronization.
test.AD_REALM_LDAP_SYNC_NOUSERS: No users found for synchronization.
test.AD_REALM_LDAP_SYNC_GROUPS: Found {0} groups for synchronization.
test.AD_REALM_LDAP_SYNC_NOGROUPS: No groups found for synchronization (system groups are excluded by default).

test.AD_REALM_NTLM_NOUSER: Not checking NTLM validation as no user/password was provided.
test.AD_REALM_KRB_NOUSER: Not checking Kerberos as no user/password was provided.
test.AD_REALM_NTLM_CHECK: Checking NTLM authentication for {0}@{1}
test.AD_REALM_NTLM_FAIL: Failed to validate NTLM credentials: {0}
test.AD_REALM_NTLM_SUCCESS: Sucessfully validated NTLM credentials for ''{0}'' (display: {1}, sid: {2}, primary group: {3}, aux. groups: {4})
test.AD_REALM_KRB_CHECK: Checking kerberos authentication for {0}@{1}
test.AD_REALM_KRB_OK: Kerberos authentication successful for {0}@{1}
test.AD_REALM_KRB_FAIL: Kerberos authentication failed for {0}@{1}: {2}

test.AD_REALM_PAC_SUCCESS: Sucessfully validated PAC for ''{0}'' (display: {1}, sid: {2},  primary group: {3}, aux. groups: {4})
test.AD_REALM_NO_PAC: Issued ticket does not contain PAC.
test.AD_REALM_PAC_FAIL: Error decoding PAC: {0}
test.AD_REALM_PAC_VALIDATE_FAIL: PAC validation failed: {0}



test.authenticator.krb5.title: Test Kerberos authentication
test.authenticator.krb5.label: Test Authentication

test.KRB5_KDC_OVERRIDE: Manually set KDCs {0}
test.KRB5_KDC_LOOKUP: Looking up KDC from DNS
test.KRB5_KDC_LOOKUP_OK: KDCs found {0}
test.KRB5_KDC_LOOKUP_FAIL: Failed to get KDCs from DNS: {0}
test.KRB5_KDC_REALM_CONFIG_MISSING: Kerberos realm {0} is not configured.
test.KRB5_SKIP_NO_USER: Skipping ticket tests as no user was provided.
test.KRB5_INIT: Getting initial credentials for {0}
test.KRB5_INIT_OK: Have initial crendetials for {0}
test.KRB5_NO_VALIDATION_KEYTAB: Don't have any service keytab, skipping ticket validation.
test.KRB5_NO_VALIDATION_KEY: No usable key found in keytabs, skipping ticket validation.
test.KRB5_VALIDATION_PRINC: Principal used for ticket validation is {0}
test.KRB5_VALIDATE_OK: Ticket validation succeeded {0} -> {1}
test.KRB5_VALIDATE_FAIL: Failed to validate ticket: {0}

