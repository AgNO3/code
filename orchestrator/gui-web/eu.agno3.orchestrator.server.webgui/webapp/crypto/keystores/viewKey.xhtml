<?xml version="1.0" encoding="UTF-8"?>
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:p="http://primefaces.org/ui"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:ag="http://agno3.eu/ns/jsf/taglib/1.0"
	template="/tpl/common/raw.xhtml">


	<ui:define name="metadata">
		<f:metadata>
			<f:viewParam name="at"
				value="#{structureViewContext.selectedObjectId}" required="true"
				requiredMessage="#{_gui['require.param.objectId']}" />

			<f:viewParam name="keystore" value="#{keystoreContext.keystore}"
				required="true" requiredMessage="#{_gui['require.param']}">
			</f:viewParam>

			<f:viewParam name="key" value="#{keystoreContext.keyAlias}"
				required="true" requiredMessage="#{_gui['require.param']}">
			</f:viewParam>
		</f:metadata>
	</ui:define>


	<ui:define name="content">
		<p:outputPanel rendered="#{not empty keystoreContext.certificate}">
			<ag:simpleField readOnly="true"
				outputStyle="font-size: 11pt; word-break: break-all; white-space: pre-wrap;"
				label="#{_bm.get('crypto.subject')}"
				value="#{certificateUtil.formatPrincipalName(keystoreContext.certificate.subjectX500Principal)}" />
			<ag:simpleField readOnly="true"
				outputStyle="font-size: 11pt; word-break: break-all; white-space: pre-wrap;"
				label="#{_bm.get('crypto.issuer')}"
				value="#{certificateUtil.formatPrincipalName(keystoreContext.certificate.issuerX500Principal)}" />
			<ag:simpleField readOnly="true" label="Serial"
				value="#{certificateUtil.formatSerial(keystoreContext.certificate)}" />
			<ag:simpleField readOnly="true"
				label="#{_bm.get('crypto.validityPeriod')}"
				outputStyle="#{certificateUtil.getValidityStyle(keystoreContext.certificate)}"
				value="#{certificateUtil.formatValidity(keystoreContext.certificate)}" />
			<ag:simpleField
				onlyIf="#{not empty keystoreContext.certificate.subjectAlternativeNames}"
				readOnly="true" label="#{_bm.get('crypto.subjectAltNames')}" collection="true"
				value="#{certificateUtil.mapSubjectAltNames(keystoreContext.certificate)}" />
		</p:outputPanel>
		<p:outputPanel rendered="#{empty keystoreContext.certificate and not empty keystoreContext.keyInfo}">
			<h:outputFormat rendered="#{keystoreContext.generatedAlias}" value="#{_gui['crypto.keystore.viewKey.noCertificateInternalFmt']}">
				<f:param value="#{keystoreContext.keyAlias}" />
			</h:outputFormat>
			<h:outputFormat rendered="#{not keystoreContext.generatedAlias}" value="#{_gui['crypto.keystore.viewKey.noCertificateFmt']}">
				<f:param value="#{keystoreContext.keyAlias}" />
			</h:outputFormat>
		</p:outputPanel>
		<p:outputPanel rendered="#{empty keystoreContext.certificate and empty keystoreContext.keyInfo}">
			<p:messages />
			<h:outputFormat rendered="#{keystoreContext.generatedAlias}" value="#{_gui['crypto.keystore.viewKey.noKeyInternalFmt']}">
				<f:param value="#{keystoreContext.keyAlias}" />
			</h:outputFormat>
			<h:outputFormat rendered="#{not keystoreContext.generatedAlias}" value="#{_gui['crypto.keystore.viewKey.noKeyFmt']}">
				<f:param value="#{keystoreContext.keyAlias}" />
			</h:outputFormat>
		</p:outputPanel>
	</ui:define>

</ui:composition>